---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: promtail
  namespace: argocd
spec:
  project: infrastructure
  source:
    chart: promtail
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 6.15.3
    helm:
      releaseName: promtail
      values: |
        # Configuration
        config:
          logLevel: info
          serverPort: 3101
          clients:
            - url: http://loki-gateway.logging.svc.cluster.local/loki/api/v1/push
              tenant_id: 1
              
          positions:
            filename: /run/promtail/positions.yaml
            
          scrape_configs:
            # Kubernetes pods
            - job_name: kubernetes-pods
              kubernetes_sd_configs:
                - role: pod
              pipeline_stages:
                - cri: {}
                - multiline:
                    firstline: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
                    max_wait_time: 3s
                - regex:
                    expression: '^(?P<timestamp>[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}) (?P<level>[A-Z]+) (?P<message>.*)'
                - timestamp:
                    source: timestamp
                    format: '2006-01-02 15:04:05'
                - labels:
                    level:
                - output:
                    source: message
              relabel_configs:
                - source_labels:
                    - __meta_kubernetes_pod_controller_name
                  regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
                  target_label: __tmp_controller_name
                - source_labels:
                    - __meta_kubernetes_pod_label_app_kubernetes_io_name
                    - __meta_kubernetes_pod_label_app
                    - __tmp_controller_name
                    - __meta_kubernetes_pod_name
                  regex: ^;*([^;]+)(;.*)?$
                  target_label: app
                  replacement: $1
                - source_labels:
                    - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                    - __meta_kubernetes_pod_label_release
                  regex: ^;*([^;]+)(;.*)?$
                  target_label: instance
                  replacement: $1
                - source_labels:
                    - __meta_kubernetes_pod_label_app_kubernetes_io_component
                    - __meta_kubernetes_pod_label_component
                  regex: ^;*([^;]+)(;.*)?$
                  target_label: component
                  replacement: $1
                - replacement: /var/log/pods/*$1/*.log
                  separator: /
                  source_labels:
                    - __meta_kubernetes_pod_uid
                    - __meta_kubernetes_pod_container_name
                  target_label: __path__
                - replacement: /var/log/pods/*$1/*.log
                  regex: true/(.*)
                  separator: /
                  source_labels:
                    - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
                    - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
                    - __meta_kubernetes_pod_container_name
                  target_label: __path__
                  
            # Kubernetes events
            - job_name: kubernetes-events
              kubernetes_sd_configs:
                - role: pod
              pipeline_stages:
                - cri: {}
                - json:
                    expressions:
                      level: severity
                      timestamp: timestamp
                      message: message
                - timestamp:
                    source: timestamp
                    format: RFC3339
                - labels:
                    level:
                - output:
                    source: message
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_name]
                  regex: '.*event-exporter.*'
                  action: keep
                  
            # System logs (journald)
            - job_name: journal
              journal:
                json: false
                max_age: 12h
                path: /var/log/journal
                labels:
                  job: systemd-journal
              pipeline_stages:
                - json:
                    expressions:
                      priority: PRIORITY
                      unit: _SYSTEMD_UNIT
                      hostname: _HOSTNAME
                - labels:
                    priority:
                    unit:
                    hostname:
                - match:
                    selector: '{unit="k3s.service"}'
                    stages:
                    - regex:
                        expression: '(?P<timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<service>\S+):\s+(?P<level>[A-Z]+)\s+(?P<message>.*)'
                    - timestamp:
                        source: timestamp
                        format: 'Jan 2 15:04:05'
                    - labels:
                        level:
                        service:
                    - output:
                        source: message
                        
        # DaemonSet configuration
        daemonset:
          enabled: true
          
        # Service monitor
        serviceMonitor:
          enabled: true
          namespace: monitoring
          labels:
            release: kube-prometheus-stack
            
        # Resources
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
            
        # Security context
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
          allowPrivilegeEscalation: false
          
        # Volumes
        volumes:
          - name: run
            hostPath:
              path: /run/promtail
          - name: containers
            hostPath:
              path: /var/lib/docker/containers
          - name: pods
            hostPath:
              path: /var/log/pods
          - name: journal
            hostPath:
              path: /var/log/journal
              
        volumeMounts:
          - name: run
            mountPath: /run/promtail
          - name: containers
            mountPath: /var/lib/docker/containers
            readOnly: true
          - name: pods
            mountPath: /var/log/pods
            readOnly: true
          - name: journal
            mountPath: /var/log/journal
            readOnly: true
            
        # Node selector
        nodeSelector:
          kubernetes.io/os: linux
          
        # Tolerations for system pods
        tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/master
            operator: Exists
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
  destination:
    server: https://kubernetes.default.svc
    namespace: logging
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true