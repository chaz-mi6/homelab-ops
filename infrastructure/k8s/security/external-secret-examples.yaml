---
# Example: ArgoCD OIDC Secret from Vault
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argocd-oidc-secret
  namespace: argocd
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: SecretStore
    name: vault-backend
  target:
    name: argocd-oidc-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        oidc.vault.clientSecret: "{{ .clientSecret }}"
  data:
  - secretKey: clientSecret
    remoteRef:
      key: argocd
      property: oidc_client_secret
---
# Example: Cloudflare API Token for cert-manager
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cloudflare-api-token
  namespace: cert-manager
spec:
  refreshInterval: 24h
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    name: cloudflare-api-token-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        api-token: "{{ .token }}"
  data:
  - secretKey: token
    remoteRef:
      key: cloudflare
      property: api_token
---
# Example: Grafana Admin Password
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: grafana-admin-secret
  namespace: monitoring
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    name: grafana-admin-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        admin-user: admin
        admin-password: "{{ .password }}"
  data:
  - secretKey: password
    remoteRef:
      key: grafana
      property: admin_password
---
# Example: Database credentials for applications
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: database-credentials
  namespace: production
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    name: database-credentials
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        username: "{{ .username }}"
        password: "{{ .password }}"
        host: "{{ .host }}"
        database: "{{ .database }}"
  data:
  - secretKey: username
    remoteRef:
      key: database/postgresql
      property: username
  - secretKey: password
    remoteRef:
      key: database/postgresql
      property: password
  - secretKey: host
    remoteRef:
      key: database/postgresql
      property: host
  - secretKey: database
    remoteRef:
      key: database/postgresql
      property: database