---
# Minio root credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: minio-credentials
  namespace: backup
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    name: minio-credentials
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        root-password: "{{ .rootPassword }}"
  data:
  - secretKey: rootPassword
    remoteRef:
      key: minio
      property: root_password
---
# Minio velero user credentials  
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: minio-velero-user
  namespace: backup
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    name: minio-velero-user
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        password: "{{ .password }}"
  data:
  - secretKey: password
    remoteRef:
      key: minio
      property: velero_password
---
# Velero AWS credentials for Minio
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: velero-credentials
  namespace: backup
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    name: velero-credentials
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        cloud: |
          [default]
          aws_access_key_id={{ .accessKeyId }}
          aws_secret_access_key={{ .secretAccessKey }}
  data:
  - secretKey: accessKeyId
    remoteRef:
      key: minio
      property: velero_access_key_id
  - secretKey: secretAccessKey
    remoteRef:
      key: minio
      property: velero_secret_access_key
---
# Backup notification webhook secret
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: backup-webhook-secret
  namespace: backup
spec:
  refreshInterval: 24h
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    name: backup-webhook-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        webhook-url: "{{ .webhookUrl }}"
        webhook-token: "{{ .webhookToken }}"
  data:
  - secretKey: webhookUrl
    remoteRef:
      key: backup
      property: webhook_url
  - secretKey: webhookToken
    remoteRef:
      key: backup
      property: webhook_token